let osc, fft;
let spectrumMax = 0;
let spectrumMaxIndex = 0;

function setup() {
  let cnv = createCanvas(100, 100);
  cnv.mousePressed(startSound);
  osc = new p5.Oscillator();
  osc.amp(0);
  fft = new p5.FFT();
}

function draw() {
  background(220);

  let freq = map(mouseX, 0, windowWidth, 20, 10000);
  freq = constrain(freq, 1, 20000);
  osc.freq(freq);

  let spectrum = fft.analyze(1024, "dB");
  noStroke();
  fill(255, 0, 255);
  for (let i = 0; i < spectrum.length; i++) {
    let x = map(i, 0, spectrum.length, 0, width);
    let h = -height + map(spectrum[i], 0, 255, height, 0);
    rect(x, height, width / spectrum.length, h);
    //if (spectrum[i] > 250) {
    //spectrumMax = spectrum[i];
    //spectrumMaxIndex = i;
    //print(spectrumMax, spectrumMaxIndex);
    //}
  }


  print(round(freq) + 'Hz' + '  |  Energy : ' + round(fft.getEnergy(900, 1100)));

  stroke(255);
  if (!osc.started) {
    text('tap here and drag to change frequency', 10, 20, width - 20);
  } else {
    text(round(freq) + 'Hz', 10, 20);
  }
}

function startSound() {
  spectrumMax = 0;
  spectrumMaxIndex = 0;
  osc.start();
  osc.amp(0.5, 0.2);
}

function mouseReleased() {
  osc.amp(0, 0.2);
}


/*-----MIC TO FFT-----*/

let mic, fft;

function setup() {
  createCanvas(710, 400);
  noFill();

  mic = new p5.AudioIn();
  mic.start();
  fft = new p5.FFT();
  fft.setInput(mic);
}

function draw() {
  background(200);

  let spectrum = fft.analyze();

  beginShape();
  for (i = 0; i < spectrum.length; i++) {
    vertex(i, map(spectrum[i], 0, 255, height, 0));
  }
  endShape();
}


/*-----Song?-----*/

var song;

function preload(){
  //song = loadSound('../assets/sounds/meow.wav');
}

function setup() {
  
}

function draw() {
  fill(255,0,255);
  ball = ellipse(50, 50, 80, 80);
  //song.play();
}

function mousePressed(){
  ball.width = 120;
  ball._elements[0]width = 120;
  console.log(ball);
}